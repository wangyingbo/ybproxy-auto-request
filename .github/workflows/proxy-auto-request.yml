# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 */3 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "ğŸ‘ŠğŸ‘ŠğŸ‘ŠğŸ‘ŠğŸ‘ŠğŸ‘Šaction beginğŸ‘ŠğŸ‘ŠğŸ‘ŠğŸ‘ŠğŸ‘ŠğŸ‘Š"
          # curl https://ybproxypool.herokuapp.com
          #echo ------------success excute curl ybproxypool!!!!!!!------------
          # curl https://ybproxy.herokuapp.com/
          #echo ------------success excute curl ybproxy!!!!!!!------------
          
          if [ "$(curl -sL -w '%{http_code}' https://ybproxypool.herokuapp.com/ -o /dev/null)" = "200" ]; then
            echo ------------success excute curl ybproxypool!!!!!!!------------
          else
            echo "ybproxypool Fail!!!"
          fi
          
          if curl -sL --fail https://ybproxy.herokuapp.com/ -o /dev/null; then
            echo ------------success excute curl ybproxy!!!!!!!------------
          else
            echo "ybproxy Fail!!!"
          fi
          
          git config --local user.email "wangyingbo528@126.com"
          git config --local user.name "wangyingbo"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git pull --rebase
          DATE=`date +%Y%m%d%H%M%S`
          echo "current git push time: $DATE"
          # echo $DATE >> ./recordtime.txt
          sed -i "1i$DATE" ./recordtime.txt
          git add recordtime.txt
          git commit --allow-empty -m " update auto request ybproxy"
          git push
          
          sleep 1
          echo -e "\033[33;40m  ($0) ${TIME}: this shell script execution duration: ${SECONDS}s  \033[0m"
          echo "ğŸ˜ŠğŸ˜ŠğŸ˜ŠğŸ˜ŠğŸ˜ŠğŸ˜Šsuccess excute shellğŸ˜ŠğŸ˜ŠğŸ˜ŠğŸ˜ŠğŸ˜ŠğŸ˜Š"
